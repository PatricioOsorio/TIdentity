@using Microsoft.AspNetCore.Identity;
@model IEnumerable<CustomUser>;
@inject UserManager<CustomUser> UserManager;

@{
  ViewData["Title"] = "Usuarios";
}

<div class="container">

  <div class="row">
    <div class="col-sm-6">
      <h1 class="text-body-emphasis display-6 mb-3 text-gradient">@ViewData["Title"]</h1>
    </div>
    <div class="col-sm-6">
      <nav aria-label="breadcrumb" class="d-sm-flex justify-content-end">
        <ol class="breadcrumb ms-auto">
          <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")"><i class="fa-solid fa-house me-1"></i>Inicio</a></li>
          <li class="breadcrumb-item active" aria-current="page">
            <i class="fa-solid fa-users me-1"></i>
            <span class="nav_name">Usuarios</span>
          </li>
        </ol>
      </nav>
    </div>
  </div>

  <a class="btn btn-primary mb-3" asp-asp-area="Identity" asp-area="Identity" asp-page="/Account/Register">
    <i class="fas fa-user-plus me-1"></i>Crear usuario
  </a>

  @if (Model.Any())
  {
    <div class="table-responsive bg-body-tertiary rounded">
      <div class="p-sm-2 p-lg-5">
        <table id="MyTable" class="table table-striped table-hover table-borderless align-middle text-center shadow rounded overflow-hidden">
          <thead class="table-primary">
            <tr>
              <th>@Html.DisplayNameFor(m => m.Nombre)</th>
              <th>@Html.DisplayNameFor(m => m.ApellidoPaterno)</th>
              <th>@Html.DisplayNameFor(m => m.ApellidoMaterno)</th>
              <th>@Html.DisplayNameFor(m => m.Email)</th>
              <th>Rol</th>
              <th>Acciones</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var user in Model)
            {
              <tr>
                <td>@Html.DisplayFor(m => user.Nombre)</td>
                <td>@Html.DisplayFor(m => user.ApellidoPaterno)</td>
                <td>@Html.DisplayFor(m => user.ApellidoMaterno)</td>
                <td>@Html.DisplayFor(m => user.Email)</td>
                <td>
                  @{
                    var roles = await UserManager.GetRolesAsync(user);
                    if (roles.Any())
                    {
                      <text>@string.Join(", ", roles)</text>
                    }
                    else
                    {
                      <p class="text-decoration-underline">No tiene roles asignados</p>
                    }
                  }
                </td>
                <td class="d-flex justify-content-center align-items-center gap-1">
                  <a asp-action="UpdateUser" asp-route-id="@user.Id" class="btn btn-warning" title="Editar"><i class="fas fa-edit"></i></a>
                  <a class="btn btn-danger AlertaEliminarUsuario" data-id="@user.Id" data-username="@user.Email" title="Eliminar"><i class="fa-solid fa-trash AlertaEliminarUsuario" data-id="@user.Id" data-username="@user.Email"></i></a>
                </td>

              </tr>
            }
          </tbody>
        </table>
      </div>
    </div>
  }
  else
  {
    <p>No existen registros</p>
  }
</div>